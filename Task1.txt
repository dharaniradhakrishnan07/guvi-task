1a. Print odd numbers in an array

anonymous function:
function(odd){
    for(var i=0 ; i<odd.length ; i++){
     if(odd[i]%2!=0){
     console.log(odd[i])
      }
    }
}
IIFE:

(function(odd){
    for(var i=0 ; i<odd.length ; i++){
        if(odd[i]%2!=0){
            console.log(odd[i])
        }
    }
})([10,13,22,17])

1b. convert all the strings to title caps in a string array

anonymous function:
function(str){
    str = str.toLowerCase().split(' ');
    for(var i = 0; i<str.length; i++){
        str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);
    }
    return str.joins(' ');
}
IIFE:
(function (str){
    str = str.toLowerCase.split(' ');
    for(var i = 0; i<str.length; i++){
        str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);
    }
    return str.joins(' ');
})("I FORGET MY BAG");

1c. Sum of all numbers in an array

anonymous function:
function(sums){
    var sum = 0;
    for(var i = 0 ; i<sums.length ; i++){
        sum = sum + sums[i]
    }
    return sum;
}
IIFE:
function(sums){
    var sum = 0;
    for(var i = 0 ; i<sums.length ; i++){
        sum = sum + sums[i]
    }
    return sum;
}

1d. return all the prime numbers in an array

anonymous function:
function(prime){
    prime = prime.filter((number) => {
        for (var i = 2; i<= Math.sqrt(number); i++ ){
            if(number % i === 0) return false;
        }
      return true;
    });
    console.log(prime)
}
IIFE:
(function(prime){
    prime = prime.filter((number) => {
        for (var i = 2; i<= Math.sqrt(number); i++ ){
            if(number % i === 0) return false;
        }
      return true;
    });
    console.log(prime)
})([1,2,3,4])

1e. Return all the palindromes in an array

anonymous function:
function ispalindrome(N)
{
    let str = "" + N;
    let len = str.length;
    for(let i = 0; i < parseInt(len /2,10); i++)
    {
        if (str[i] != str[len - 1 -i])
        return false;
    }
    return true;
}
function(arr,n){
    for(let i=0;i<n;i++){
        let ans = ispalindrome(arr[i]);
        if(ans == false)
        return false;
    }
    return true;
}
IIFE:
(function ispalindrome(N)
{
    let str = "" + N;
    let len = str.length;
    for(let i = 0; i < parseInt(len /2,10); i++)
    {
        if (str[i] != str[len - 1 -i])
        return false;
    }
    return true;
}
function(arr,n){
    for(let i=0;i<n;i++){
        let ans = ispalindrome(arr[i]);
        if(ans == false)
        return false;
    }
    return true;
})([41,29,33] , 33)

1f. Return median of two sorted arrays of the same size

anonymous function:
function(num1,num2){
    let s1 = num1.length
    let s2 = num2.length
    let index = s1+s2
    if(s1==0){
        if(s2%2==1){
            return num2[Math.floor(index/2)]        }
    }else{
        return (num2[Math.floor(index/2)-1] + num2[Math.floor(index/2)])/2
    }
}
for(let i=0 ; i<index/2+1;i++){
    num1.push(num2[i])
}
num1.sort((a,b)=>a-b)
console.log(num1)
if(index%2 == 1){
    return num1[Math.floor(index/2)]
}else{
    return(num1[Math.floor(index/2)-1] + num1[Math.floor(index/2)]/2)
};
IIFE:
(function(num1,num2){
    let s1 = num1.length
    let s2 = num2.length
    let index = s1+s2
    if(s1==0){
        if(s2%2==1){
            return num2[Math.floor(index/2)]        }
    }else{
        return (num2[Math.floor(index/2)-1] + num2[Math.floor(index/2)])/2
    }
}
for(let i=0 ; i<index/2+1;i++){
    num1.push(num2[i])
}
num1.sort((a,b)=>a-b)
console.log(num1)
if(index%2 == 1){
    return num1[Math.floor(index/2)]
}else{
    return(num1[Math.floor(index/2)-1] + num1[Math.floor(index/2)]/2)
});

1g. Remove duplicates from an array

anonymous function:
var array=[1,1,2,3,4,5];
function(array){
    let dup = [...new Set(array)];
    return(dup)
}
(array);
IIFE:
var array=[1,1,2,3,4,5];
function(array){
    let dup = [...new Set(array)];
    return(dup)
}
(array);

1h. Rotate an array by K times

anonymous function:
function reverse(array,li,ri){
    while(li<ri){
        int temp = a[li];
        a[li] = a[ri];
        a[ri] = temp;
        li++
        ri--;
    
    }
}
function(array,k){
    k = k % a.length;
    if(k < 0){
        k += a.length;
    } 
    reverse(a,0,a.length -k -1);
    reverse(a,a.length -k,a.length-1);
    reverse(a,0,a.length-1);
}

IIFE:
(function reverse(array,li,ri){
    while(li<ri){
        int temp = a[li];
        a[li] = a[ri];
        a[ri] = temp;
        li++
        ri--;
    
    }
}
function(array,k){
    k = k % a.length;
    if(k < 0){
        k += a.length;
    } 
    reverse(a,0,a.length -k -1);
    reverse(a,a.length -k,a.length-1);
    reverse(a,0,a.length-1);
})([1,2,3,4],2)